<body>
    <script src="https://unpkg.com/htmx.org@1.9.5"></script>
    <div class="wrapper">
        <!-- Sidebar  -->
        <nav id="sidebar">
            <div class="sidebar-header">
            </div>
            <h2 class="text-center">수동제어 패널</h2>
            <ul class="list-group">
                <li class="list-group-item list-group-item-light">
                    <button class="btn btn-danger" id="modeButton" onclick="toggleMode()">수동제어모드</button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <b>대응단계</b><button id="stage"
                        class="btn <%= ship.stage === 0 ? 'btn-success' : (ship.stage === 1 ? 'btn-warning' : 'btn-danger') %>"
                        onclick="manualStage('<%= ship.stage %>')">
                        <% if (ship.stage===0) { %>
                            돌고래 0단계
                            <% } else if (ship.stage===1) { %>
                                돌고래 1단계
                                <% } else if (ship.stage===2) { %>
                                    돌고래 2단계
                                    <% } %>
                    </button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <b>AIS</b>
                    <button id="ais" class="btn <%= ship.ais === 1 ? 'btn-success' : 'btn-danger' %>"
                        onclick="handleButtonClick('<%= ship.ais %>','ais')">
                        <%= ship.ais===1 ? 'ON' : 'OFF' %>
                    </button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <b>SSAS</b>
                    <button id="ssas" class="btn <%= ship.ssas === 1 ? 'btn-success' : 'btn-danger' %>"
                        onclick="handleButtonClick('<%= ship.ssas %>','ssas');">
                        <%= ship.ssas===1 ? 'ON' : 'OFF' %>
                    </button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <b>경보</b>
                    <button id="speaker" class="btn <%= ship.speaker === 1 ? 'btn-success' : 'btn-danger' %>"
                        onclick="handleButtonClick('<%= ship.speaker %>','speaker')">
                        <%= ship.speaker===1 ? 'ON' : 'OFF' %>
                    </button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <b>Electronic Blow</b>
                    <button id="eb" class="btn <%= ship.eb === 1 ? 'btn-success' : 'btn-danger' %>"
                        onclick="handleButtonClick('<%= ship.eb %>','eb')">
                        <%= ship.eb===1 ? 'ON' : 'OFF' %>
                    </button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <button type="button" class="btn btn-danger btn-lg" onclick="manual_report()">수동신고</button>
                </li>
            </ul>

            <ul class="list-group">
                <li class="list-group-item list-group-item-light">
                    <a class="btn btn-info btn-lg" onclick="openW()">해적정보 확인</a>
                    <!-- <a href="/pirate?location=<%- ship.location %>" target="_blank" class="btn btn-info btn-lg">해적정보 확인</a>
                    -->
                </li>
                <li class="list-group-item list-group-item-light">
                    <button type="button" class="btn btn-primary btn-lg" onclick="openAccidentLog()">해양수산부</button>
                </li>
                <li class="list-group-item list-group-item-light">
                    <button type="button" class="btn btn-secondary btn-lg" onclick="openEventLog()">사고기록 확인</button>
                </li>
            </ul>
        </nav>

        <!-- Page Content  -->
        <div id="content">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="container-fluid">
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <table class="table table-bordered">
                            <tbody>
                                <tr>
                                    <th><b class="text-primary">선박명</b> : <%= ship.ship_name %>
                                    </th>
                                    <th><b class="text-primary">연결상태</b> : <%= connect %>
                                    </th>
                                    <th><b class="text-primary">SOG</b> : <%= ship.sog %>knt</th>
                                    <th><b class="text-primary">COG</b> : <%= ship.cog %>°</th>
                                    <th><b class="text-primary">위치</b> : <%= ship.location %>
                                    </th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div id="tableContainer"></div>
                </div>
            </nav>

            <div id="video-container" class="embed-responsive embed-responsive-16by9">
                <img id="image" src="" width="90%" height="100%">
                <div id="spinner" class="spinner-grow text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p id="text1" class="text-black">비디오 로딩중...</p>
            </div>
        </div>
        <script>
            const updateImage = () => {
                const spinner = document.getElementById('spinner');
                const textSpinner = document.getElementById("text1");
                fetch("http://172.20.10.2:8080/detect").then((response) => {
                    return response.json();
                })
                    .then((data) => {
                        spinner.style.display = 'none';
                        textSpinner.style.display = 'none';
                        let img = document.getElementById("image");
                        img.style.display = 'block';
                        let imageBase64 = data.image_data;
                        console.log(imageBase64)
                        img.src = "data:image/png;base64," + imageBase64;
                    })
                    .catch((error) => {
                        console.error(error);
                    })
                    .finally(() => {
                        setTimeout(updateImage, 33);
                    })
            }
            updateImage();
            const openNewWindow = (url) => {
                var newWindow = window.open(url, "_blank");
            }

            const openAccidentLog = () => {
                openNewWindow('/accident-log');
            }

            const openEventLog = () => {
                openNewWindow('/event-log');
            }
            const manual_report = () => {
                const inputValue = prompt("기록 사항을 입력해주세요.");
                if (inputValue) {
                    const url = "/report";
                    const data = {
                        datetime: new Date(),
                        shipN: "<%= ship.ship_name %>",
                        location: "<%= ship.location %>",
                        stage: "<%= ship.stage %>",
                        etc: inputValue,
                    };
                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json' // JSON 데이터를 보내는 경우
                        },
                        body: JSON.stringify(data) // 데이터를 JSON 문자열로 변환하여 전송
                    }).then(() => { alert("신고 완료!"); })
                        .catch(error => {
                            console.error("post 에러");
                        });
                }
            }

            window.onload = () => {
                let isManualMode = false;
            };
            let isManualMode = "";
            const toggleMode = () => {
                isManualMode = !isManualMode;
                const modeButtonElement = document.getElementById('modeButton');
                if (isManualMode) {
                    modeButtonElement.textContent = '수동 제어 모드 작동중';
                    modeButtonElement.classList.remove('btn-danger');
                    modeButtonElement.classList.add('btn-success');
                    // 선박으로 수동제어 모드 작동 명령 전달
                } else {
                    modeButtonElement.textContent = '수동 제어 모드';
                    modeButtonElement.classList.remove('btn-success');
                    modeButtonElement.classList.add('btn-danger');
                    // 선박으로 수동제어 모드 해제 명령 전달
                }
                // 선박으로 수동 제어모드 명령
                // const url = ""
                // fetch(url, {
                //     method: 'POST',
                //     headers: {
                //         'Content-Type': 'application/json' // JSON 데이터를 보내는 경우
                //     },
                //     body: JSON.stringify({order:isManualMode}) // 데이터를 JSON 문자열로 변환하여 전송
                // }).catch(error => {
                //     console.error("post 에러");
                // });
            }
            const handleButtonClick = (value, module) => {
                const modeButtonElement = document.getElementById(module);
                // 토글 버튼을 위한 처리
                const state = modeButtonElement.className.split(" ")[1].split("-")[1];
                let msg = {}
                if (isManualMode) {
                    // ON 상태일 경우
                    if (state == "success") { // OFF로 변경
                        value = false;
                        modeButtonElement.classList.remove('btn-success');
                        modeButtonElement.classList.add('btn-danger');
                        modeButtonElement.textContent = "OFF";
                    }// OFF 상태일 경우
                    else if (state == "danger") { // ON로 변경
                        value = true;
                        modeButtonElement.classList.remove('btn-danger');
                        modeButtonElement.classList.add('btn-success');
                        modeButtonElement.textContent = "ON";
                    }
                    msg = { query: 'UPDATE ship_status SET ' + module + '=' + value + ' WHERE ship_name="<%= ship.ship_name%>"' }
                    fetch('/manual', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json' // JSON 데이터를 보내는 경우
                        },
                        body: JSON.stringify(msg)
                    })
                }
                else {
                    alert("수동 제어모드를 활성화 시켜주세요!");
                }
            }
            const manualStage = (value) => {
                const modeButtonElement = document.getElementById("stage");
                const state = modeButtonElement.className.split(" ")[1].split("-")[1];
                let msg = {}
                let changeValue = 0
                if (isManualMode) {
                    if (state == "success") {
                        changeValue = 1
                        modeButtonElement.classList.remove('btn-success');
                        modeButtonElement.classList.add('btn-warning');
                        modeButtonElement.textContent = "돌고래 1단계";
                    }
                    else if (state == "warning") {
                        changeValue = 2
                        modeButtonElement.classList.remove('btn-warning');
                        modeButtonElement.classList.add('btn-danger');
                        modeButtonElement.textContent = "돌고래 2단계";
                    }
                    else if (state == "danger") {
                        changeValue = 0
                        modeButtonElement.classList.remove('btn-danger');
                        modeButtonElement.classList.add('btn-success');
                        modeButtonElement.textContent = "돌고래 0단계";
                    }
                    msg = modeSet(state, changeValue);
                    fetch('/manual', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json' // JSON 데이터를 보내는 경우
                        },
                        body: JSON.stringify(msg)
                    })
                }
                else {
                    alert("수동 제어모드를 활성화 시켜주세요!");
                }
            }
            const openW = () => {
                const newWindow = window.open("/pirate?location=<%- ship.location %>", "_blank");
                newWindow.resize(500, 800);
            }
            const modeSet = (stage, changeValue) => {
                let query = {}
                const arr = [document.getElementById("ssas")
                    , document.getElementById("speaker")
                    , document.getElementById("eb")];
                const ais = document.getElementById("ais");
                if (stage == "success") { // warning으로
                    msg = { query: 'UPDATE ship_status SET stage=' + changeValue + ', ais=false, ssas=false, speaker=false, eb=false WHERE ship_name="<%= ship.ship_name %>"' }
                    ais.classList.remove('btn-success');
                    ais.classList.add('btn-danger');
                    ais.textContent = "OFF";
                    arr.forEach(item => {
                        item.classList.remove('btn-success');
                        item.classList.add('btn-danger');
                        item.textContent = "OFF";
                    });
                }
                else if (stage == "warning") { // danger으로
                    msg = { query: 'UPDATE ship_status SET stage=' + changeValue + ', ais=false, ssas=true, speaker=true, eb=true WHERE ship_name="<%= ship.ship_name %>"' }
                    ais.classList.remove('btn-success');
                    ais.classList.add('btn-danger');
                    ais.textContent = "OFF";
                    arr.forEach(item => {
                        item.classList.remove('btn-danger');
                        item.classList.add('btn-success');
                        item.textContent = "ON";
                    })
                }
                else if (stage == "danger") { // success으로
                    msg = { query: 'UPDATE ship_status SET stage=' + changeValue + ', ais=true, ssas=false, speaker=false, eb=false WHERE ship_name="<%= ship.ship_name %>"' }
                    ais.classList.remove('btn-danger');
                    ais.classList.add('btn-success');
                    ais.textContent = "ON";
                    arr.forEach(item => {
                        item.classList.remove('btn-success');
                        item.classList.add('btn-danger');
                        item.textContent = "OFF";
                    })
                }
                return msg
            }
        </script>
</body>